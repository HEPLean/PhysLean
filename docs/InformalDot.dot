strict digraph G {
    graph [
    pack=true;
    packmode="array1";
    ];
    tooltip = "Informal HepLean graph";
    node [margin="0.2,0.05";  fontsize=10;  fontname="Georgia", height=0.1];
    bgcolor="white";
    labelloc="t";
    labeljust="l";
    edge [arrowhead=vee];
subgraph cluster_Cosmology_SpatialGeometry
      {
          label="Cosmology.SpatialGeometry";
          color=steelblue;
              }
subgraph cluster_Cosmology_SpatialGeometry
      {
          label="Cosmology.SpatialGeometry";
          color=steelblue;
              }
subgraph cluster_Cosmology_FLRW
      {
          label="Cosmology.FLRW";
          color=steelblue;
              }
subgraph cluster_Cosmology_FLRW
      {
          label="Cosmology.FLRW";
          color=steelblue;
              }
subgraph cluster_Cosmology_FLRW
      {
          label="Cosmology.FLRW";
          color=steelblue;
              }
subgraph cluster_Cosmology_FLRW
      {
          label="Cosmology.FLRW";
          color=steelblue;
              }
subgraph cluster_Cosmology_FLRW
      {
          label="Cosmology.FLRW";
          color=steelblue;
              }
subgraph cluster_GeorgiGlashow
      {
          label="GeorgiGlashow";
          color=steelblue;
              }
subgraph cluster_GeorgiGlashow
      {
          label="GeorgiGlashow";
          color=steelblue;
              }
subgraph cluster_GeorgiGlashow
      {
          label="GeorgiGlashow";
          color=steelblue;
              }
subgraph cluster_GeorgiGlashow
      {
          label="GeorgiGlashow";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_PatiSalam
      {
          label="PatiSalam";
          color=steelblue;
              }
subgraph cluster_Spin10Model
      {
          label="Spin10Model";
          color=steelblue;
              }
subgraph cluster_Spin10Model
      {
          label="Spin10Model";
          color=steelblue;
              }
subgraph cluster_Spin10Model
      {
          label="Spin10Model";
          color=steelblue;
              }
subgraph cluster_Spin10Model
      {
          label="Spin10Model";
          color=steelblue;
              }
subgraph cluster_Spin10Model
      {
          label="Spin10Model";
          color=steelblue;
              }
subgraph cluster_Spin10Model
      {
          label="Spin10Model";
          color=steelblue;
              }
subgraph cluster_TwoHDM
      {
          label="TwoHDM";
          color=steelblue;
              }
subgraph cluster_TwoHDM
      {
          label="TwoHDM";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel
      {
          label="StandardModel";
          color=steelblue;
              }
subgraph cluster_StandardModel_HiggsField
      {
          label="StandardModel.HiggsField";
          color=steelblue;
              }
subgraph cluster_StandardModel_HiggsVec
      {
          label="StandardModel.HiggsVec";
          color=steelblue;
              }
subgraph cluster_StandardModel_HiggsVec
      {
          label="StandardModel.HiggsVec";
          color=steelblue;
              }
subgraph cluster_StandardModel_HiggsVec
      {
          label="StandardModel.HiggsVec";
          color=steelblue;
              }
subgraph cluster_StandardModel_HiggsField
      {
          label="StandardModel.HiggsField";
          color=steelblue;
              }
subgraph cluster_StandardModel_HiggsField
      {
          label="StandardModel.HiggsField";
          color=steelblue;
              }
subgraph cluster_StandardModel_HiggsField
      {
          label="StandardModel.HiggsField";
          color=steelblue;
              }
subgraph cluster_StandardModel_HiggsField_Potential
      {
          label="StandardModel.HiggsField.Potential";
          color=steelblue;
              }
subgraph cluster_complexLorentzTensor
      {
          label="complexLorentzTensor";
          color=steelblue;
              }
subgraph cluster_complexLorentzTensor
      {
          label="complexLorentzTensor";
          color=steelblue;
              }
subgraph cluster_Lorentz_SL2C
      {
          label="Lorentz.SL2C";
          color=steelblue;
              }
subgraph cluster_SpaceTime
      {
          label="SpaceTime";
          color=steelblue;
              }
subgraph cluster_SpecialRelativity_InstantaneousTwinParadox
      {
          label="SpecialRelativity.InstantaneousTwinParadox";
          color=steelblue;
              }
subgraph cluster_IndexNotation_OverColor
      {
          label="IndexNotation.OverColor";
          color=steelblue;
              }
subgraph cluster_Fermion
      {
          label="Fermion";
          color=steelblue;
              }
subgraph cluster_Fermion
      {
          label="Fermion";
          color=steelblue;
              }
subgraph cluster_realLorentzTensor
      {
          label="realLorentzTensor";
          color=steelblue;
              }
subgraph cluster_realLorentzTensor
      {
          label="realLorentzTensor";
          color=steelblue;
              }
subgraph cluster_realLorentzTensor
      {
          label="realLorentzTensor";
          color=steelblue;
              }
subgraph cluster_realLorentzTensor
      {
          label="realLorentzTensor";
          color=steelblue;
              }
subgraph cluster_realLorentzTensor
      {
          label="realLorentzTensor";
          color=steelblue;
              }
subgraph cluster_realLorentzTensor
      {
          label="realLorentzTensor";
          color=steelblue;
              }
subgraph cluster_IndexNotation_OverColor { "IndexNotation.OverColor.forget"[label="IndexNotation.OverColor.forget", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The forgetful map from `BraidedFunctor (OverColor C) (Rep k G)` to `Discrete C ⥤ Rep k G`
built on the inclusion `incl` and forgetting the monoidal structure. "]; }
subgraph cluster_SpaceTime { "SpaceTime"[label="SpaceTime", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The space-time "]; }
subgraph cluster_Fermion { "Fermion.rightHanded"[label="Fermion.rightHanded", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The vector space ℂ^2 carrying the conjugate representation of SL(2,C).
In index notation corresponds to a Weyl fermion with indices ψ^{dot a}. "]; }
subgraph cluster_StandardModel_HiggsField_Potential { "StandardModel.HiggsField.Potential"[label="StandardModel.HiggsField.Potential", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The structure `Potential` is defined with two fields, `μ2` corresponding
to the mass-squared of the Higgs boson, and `l` corresponding to the coefficent
of the quartic term in the Higgs potential. Note that `l` is usually denoted `λ`. "]; }
subgraph cluster_TensorSpecies_Tensor { "TensorSpecies.Tensor.prodT"[label="TensorSpecies.Tensor.prodT", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The tensor product of two tensors as a bi-linear map from
`S.Tensor c` and `S.Tensor c1` to `S.Tensor (Sum.elim c c1 ∘ ⇑finSumFinEquiv.symm)`. "]; }
subgraph cluster_StandardModel_HiggsField { "StandardModel.HiggsField.zero"[label="StandardModel.HiggsField.zero", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The higgs field which is all zero. "]; }
subgraph cluster_StandardModel { "StandardModel.GaugeGroupQuot"[label="StandardModel.GaugeGroupQuot", shape=box, style=filled, fillcolor=steelblue,
    tooltip="Specifies the allowed quotients of `SU(3) x SU(2) x U(1)` which give a valid
gauge group of the Standard Model. "]; }
subgraph cluster_StandardModel_HiggsVec { "StandardModel.HiggsVec.rotate_fst_zero_snd_real"[label="StandardModel.HiggsVec.rotate_fst_zero_snd_real", shape=box, style=filled, fillcolor=steelblue,
    tooltip="For every Higgs vector there exists an element of the gauge group which rotates that
Higgs vector to have `0` in the first component and be a non-negative real in the second
component. "]; }
subgraph cluster_complexLorentzTensor { "complexLorentzTensor.rightMetric"[label="complexLorentzTensor.rightMetric", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The metric `ε^{dot a}^{dot a}` as a complex Lorentz tensor. "]; }
subgraph cluster_StandardModel_HiggsVec { "StandardModel.HiggsVec"[label="StandardModel.HiggsVec", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The vector space `HiggsVec` is defined to be the complex Euclidean space of dimension 2.
For a given spacetime point a Higgs field gives a value in `HiggsVec`. "]; }
subgraph cluster_Lorentz_SL2C { "Lorentz.SL2C.toLorentzGroup"[label="Lorentz.SL2C.toLorentzGroup", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The group homomorphism from `SL(2, ℂ)` to the Lorentz group `𝓛`. "]; }
subgraph cluster_Fermion { "Fermion.altRightHanded"[label="Fermion.altRightHanded", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The vector space ℂ^2 carrying the representation of SL(2,C) given by
M → (M⁻¹)^†.
In index notation this corresponds to a Weyl fermion with index `ψ_{dot a}`. "]; }
subgraph cluster_TwoHDM { "TwoHDM.prodMatrix"[label="TwoHDM.prodMatrix", shape=box, style=filled, fillcolor=steelblue,
    tooltip="For two Higgs fields `Φ₁` and `Φ₂`, the map from space time to 2 x 2 complex matrices
defined by `((Φ₁^†Φ₁, Φ₂^†Φ₁), (Φ₁^†Φ₂, Φ₂^†Φ₂))`. "]; }
subgraph cluster_LorentzGroup { "LorentzGroup.restricted"[label="LorentzGroup.restricted", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The restricted Lorentz group comprises the proper and orthochronous elements of the
Lorentz group. "]; }
subgraph cluster_complexLorentzTensor { "complexLorentzTensor.leftMetric"[label="complexLorentzTensor.leftMetric", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The metric `εᵃᵃ` as a complex Lorentz tensor. "]; }
subgraph cluster_complexLorentzTensor { "complexLorentzTensor.coBispinorDown"[label="complexLorentzTensor.coBispinorDown", shape=box, style=filled, fillcolor=steelblue,
    tooltip="A bispinor `pₐₐ` created from a lorentz vector `p_μ`. "]; }
subgraph cluster_Lorentz_SL2C { "Lorentz.SL2C.toLorentzGroup_det_one"[label="Lorentz.SL2C.toLorentzGroup_det_one", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The determinant of the image of `SL(2, ℂ)` in the Lorentz group is one. "]; }
subgraph cluster_StandardModel_HiggsVec { "StandardModel.HiggsVec.rep"[label="StandardModel.HiggsVec.rep", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The representation of the gauge group acting on `higgsVec`. "]; }
subgraph cluster_Lorentz_SL2C { "Lorentz.SL2C.toLorentzGroup_isOrthochronous"[label="Lorentz.SL2C.toLorentzGroup_isOrthochronous", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The image of `SL(2, ℂ)` in the Lorentz group is orthochronous. "]; }
subgraph cluster_complexLorentzTensor { "complexLorentzTensor.contrBispinorDown"[label="complexLorentzTensor.contrBispinorDown", shape=box, style=filled, fillcolor=steelblue,
    tooltip="A bispinor `pₐₐ` created from a lorentz vector `p^μ`. "]; }
subgraph cluster_complexLorentzTensor { "complexLorentzTensor.contrBispinorUp"[label="complexLorentzTensor.contrBispinorUp", shape=box, style=filled, fillcolor=steelblue,
    tooltip="A bispinor `pᵃᵃ` created from a lorentz vector `p^μ`. "]; }
subgraph cluster_complexLorentzTensor { "complexLorentzTensor.coBispinorUp"[label="complexLorentzTensor.coBispinorUp", shape=box, style=filled, fillcolor=steelblue,
    tooltip="A bispinor `pᵃᵃ` created from a lorentz vector `p_μ`. "]; }
subgraph cluster_SpaceTime { "SpaceTime.space"[label="SpaceTime.space", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The space part of spacetime. "]; }
subgraph cluster_TensorSpecies_Tensor { "TensorSpecies.Tensor.permT"[label="TensorSpecies.Tensor.permT", shape=box, style=filled, fillcolor=steelblue,
    tooltip="Given a permutation `σ : Fin m → Fin n` of indices satisfying `PermCond` through `h`,
and a tensor `t`, `permT σ h t` is the tensor tensor permuted accordinge to `σ`. "]; }
subgraph cluster_IndexNotation_OverColor { "IndexNotation.OverColor.lift"[label="IndexNotation.OverColor.lift", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The functor taking functors in `Discrete C ⥤ Rep k G` to monoidal functors in
`BraidedFunctor (OverColor C) (Rep k G)`, built on the PiTensorProduct. "]; }
subgraph cluster_StandardModel_HiggsField { "StandardModel.HiggsField"[label="StandardModel.HiggsField", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The type `HiggsField` is defined such that elements are smooth sections of the trivial
vector bundle `HiggsBundle`. Such elements are Higgs fields. Since `HiggsField` is
trivial as a vector bundle, a Higgs field is equivalent to a smooth map
from `SpaceTime` to `HiggsVec`. "]; }
subgraph cluster_TensorSpecies_Tensor { "TensorSpecies.Tensor.evalT"[label="TensorSpecies.Tensor.evalT", shape=box, style=filled, fillcolor=steelblue,
    tooltip="Given a `i : Fin (n + 1)`, a `b : Fin (S.repDim (c i))` and a tensor
`t : Tensor S c`, `evalT i b t` is the tensor formed by evaluating the `i`th index
of `t` at `b`. "]; }
subgraph cluster_TwoHDM { "TwoHDM.prodMatrix_smooth"[label="TwoHDM.prodMatrix_smooth", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The map `prodMatrix` is a smooth function on spacetime. "]; }
subgraph cluster_StandardModel { "StandardModel.GaugeGroupI"[label="StandardModel.GaugeGroupI", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The global gauge group of the Standard Model with no discrete quotients.
The `I` in the Name is an indication of the statement that this has no discrete quotients. "]; }
subgraph cluster_TensorSpecies_Tensor { "TensorSpecies.Tensor.contrT"[label="TensorSpecies.Tensor.contrT", shape=box, style=filled, fillcolor=steelblue,
    tooltip="For `c : Fin (n + 1 + 1) → S.C`, `i j : Fin (n + 1 + 1)` with dual color, and a tensor
`t : Tensor S c`, `contrT i j _ t` is the tensor
formed by contracting the `i`th index of `t`
with the `j`th index. "]; }
subgraph cluster_SpecialRelativity_InstantaneousTwinParadox { "SpecialRelativity.InstantaneousTwinParadox.ageGap"[label="SpecialRelativity.InstantaneousTwinParadox.ageGap", shape=box, style=filled, fillcolor=steelblue,
    tooltip="The proper time of twin A minus the proper time of twin B. "]; }
subgraph cluster_StandardModel_HiggsField_Potential { "StandardModel.HiggsField.Potential.IsBounded"[label="StandardModel.HiggsField.Potential.IsBounded", shape=box, style=filled, fillcolor=steelblue,
    tooltip="Given a element `P` of `Potential`, the proposition `IsBounded P` is true if and only if
there exists a real `c` such that for all Higgs fields `φ` and spacetime points `x`,
the Higgs potential corresponding to `φ` at `x` is greater then or equal to`c`. I.e.

`∀ Φ x, c ≤ P.toFun Φ x`. "]; }
subgraph cluster_Cosmology_SpatialGeometry { "Cosmology.SpatialGeometry.limit_S_saddle"[label="Cosmology.SpatialGeometry.limit_S_saddle", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The limit of `S (Saddle k) r` as `k → ∞` is equal to `S (Flat) r`. "]; }
subgraph cluster_Cosmology_SpatialGeometry { "Cosmology.SpatialGeometry.limit_S_sphere"[label="Cosmology.SpatialGeometry.limit_S_sphere", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The limit of `S (Sphere k) r` as `k → ∞` is equal to `S (Flat) r`. "]; }
subgraph cluster_Cosmology_FLRW { "Cosmology.FLRW.hubbleConstant"[label="Cosmology.FLRW.hubbleConstant", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The hubble constant defined in terms of the scale factor
as `(dₜ a) / a`.

The notation `H` is used for the `hubbleConstant`.

Semiformal implementation note: Implement also scoped notation. "]; }
subgraph cluster_Cosmology_FLRW { "Cosmology.FLRW.decelerationParameter"[label="Cosmology.FLRW.decelerationParameter", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The deceleration parameter defined in terms of the scale factor
as `- (dₜdₜ a) a / (dₜ a)^2`.

The notation `q` is used for the `decelerationParameter`.

Semiformal implementation note: Implement also scoped notation. "]; }
subgraph cluster_Cosmology_FLRW { "Cosmology.FLRW.decelerationParameter_eq_one_plus_hubbleConstant"[label="Cosmology.FLRW.decelerationParameter_eq_one_plus_hubbleConstant", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The deceleration parameter is equal to `- (1 + (dₜ H)/H^2)`. "]; }
subgraph cluster_Cosmology_FLRW { "Cosmology.FLRW.time_evolution_hubbleConstant"[label="Cosmology.FLRW.time_evolution_hubbleConstant", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The time evolution of the hubble parameter is equal to `dₜ H = - H^2 (1 + q)`. "]; }
subgraph cluster_Cosmology_FLRW { "Cosmology.FLRW.hubbleConstant_decrease_iff"[label="Cosmology.FLRW.hubbleConstant_decrease_iff", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="There exists a time at which the hubble constant decreases if and only if
there exists a time where the deceleration parameter is less then `-1`. "]; }
subgraph cluster_GeorgiGlashow { "GeorgiGlashow.GaugeGroupI"[label="GeorgiGlashow.GaugeGroupI", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The gauge group of the Georgi-Glashow model, i.e., `SU(5)`. "]; }
subgraph cluster_GeorgiGlashow { "GeorgiGlashow.inclSM"[label="GeorgiGlashow.inclSM", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The homomorphism of the Standard Model gauge group into the Georgi-Glashow gauge group, i.e.,
the group homomorphism `SU(3) × SU(2) × U(1) → SU(5)` taking `(h, g, α)` to
`blockdiag (α ^ 3 g, α ^ (-2) h)`.

See page 34 of https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_GeorgiGlashow { "GeorgiGlashow.inclSM_ker"[label="GeorgiGlashow.inclSM_ker", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The kernel of the map `inclSM` is equal to the subgroup `StandardModel.gaugeGroupℤ₆SubGroup`.

See page 34 of https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_GeorgiGlashow { "GeorgiGlashow.embedSMℤ₆"[label="GeorgiGlashow.embedSMℤ₆", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The group embedding from `StandardModel.GaugeGroupℤ₆` to `GaugeGroupI` induced by `inclSM` by
quotienting by the kernel `inclSM_ker`.
"]; }
subgraph cluster_PatiSalam { "PatiSalam.GaugeGroupI"[label="PatiSalam.GaugeGroupI", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The gauge group of the Pati-Salam model (unquotiented by ℤ₂), i.e., `SU(4) × SU(2) × SU(2)`. "]; }
subgraph cluster_PatiSalam { "PatiSalam.inclSM"[label="PatiSalam.inclSM", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The homomorphism of the Standard Model gauge group into the Pati-Salam gauge group, i.e., the
group homomorphism `SU(3) × SU(2) × U(1) → SU(4) × SU(2) × SU(2)` taking `(h, g, α)` to
`(blockdiag (α h, α ^ (-3)), g, diag (α ^ 3, α ^(-3))`.

See page 54 of https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_PatiSalam { "PatiSalam.inclSM_ker"[label="PatiSalam.inclSM_ker", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The kernel of the map `inclSM` is equal to the subgroup `StandardModel.gaugeGroupℤ₃SubGroup`.

See footnote 10 of https://arxiv.org/pdf/2201.07245
"]; }
subgraph cluster_PatiSalam { "PatiSalam.embedSMℤ₃"[label="PatiSalam.embedSMℤ₃", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The group embedding from `StandardModel.GaugeGroupℤ₃` to `GaugeGroupI` induced by `inclSM` by
quotienting by the kernel `inclSM_ker`.
"]; }
subgraph cluster_PatiSalam { "PatiSalam.gaugeGroupISpinEquiv"[label="PatiSalam.gaugeGroupISpinEquiv", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The equivalence between `GaugeGroupI` and `Spin(6) × Spin(4)`. "]; }
subgraph cluster_PatiSalam { "PatiSalam.gaugeGroupℤ₂SubGroup"[label="PatiSalam.gaugeGroupℤ₂SubGroup", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The ℤ₂-subgroup of the un-quotiented gauge group which acts trivially on all particles in the
standard model, i.e., the ℤ₂-subgroup of `GaugeGroupI` with the non-trivial element `(-1, -1, -1)`.

See https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_PatiSalam { "PatiSalam.GaugeGroupℤ₂"[label="PatiSalam.GaugeGroupℤ₂", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The gauge group of the Pati-Salam model with a ℤ₂ quotient, i.e., the quotient of `GaugeGroupI`
by the ℤ₂-subgroup `gaugeGroupℤ₂SubGroup`.

See https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_PatiSalam { "PatiSalam.sm_ℤ₆_factor_through_gaugeGroupℤ₂SubGroup"[label="PatiSalam.sm_ℤ₆_factor_through_gaugeGroupℤ₂SubGroup", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The group `StandardModel.gaugeGroupℤ₆SubGroup` under the homomorphism `embedSM` factors through
the subgroup `gaugeGroupℤ₂SubGroup`.
"]; }
subgraph cluster_PatiSalam { "PatiSalam.embedSMℤ₆Toℤ₂"[label="PatiSalam.embedSMℤ₆Toℤ₂", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The group homomorphism from `StandardModel.GaugeGroupℤ₆` to `GaugeGroupℤ₂` induced by `embedSM`.
"]; }
subgraph cluster_Spin10Model { "Spin10Model.GaugeGroupI"[label="Spin10Model.GaugeGroupI", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The gauge group of the Spin(10) model, i.e., the group `Spin(10)`. "]; }
subgraph cluster_Spin10Model { "Spin10Model.inclPatiSalam"[label="Spin10Model.inclPatiSalam", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The inclusion of the Pati-Salam gauge group into Spin(10), i.e., the lift of the embedding
`SO(6) × SO(4) → SO(10)` to universal covers, giving a homomorphism `Spin(6) × Spin(4) → Spin(10)`.
Precomposed with the isomorphism, `PatiSalam.gaugeGroupISpinEquiv`, between `SU(4) × SU(2) × SU(2)`
and `Spin(6) × Spin(4)`.

See page 56 of https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_Spin10Model { "Spin10Model.inclSM"[label="Spin10Model.inclSM", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The inclusion of the Standard Model gauge group into Spin(10), i.e., the composition of
`embedPatiSalam` and `PatiSalam.inclSM`.

See page 56 of https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_Spin10Model { "Spin10Model.inclGeorgiGlashow"[label="Spin10Model.inclGeorgiGlashow", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The inclusion of the Georgi-Glashow gauge group into Spin(10), i.e., the Lie group homomorphism
from `SU(n) → Spin(2n)` discussed on page 46 of https://math.ucr.edu/home/baez/guts.pdf for `n = 5`.
"]; }
subgraph cluster_Spin10Model { "Spin10Model.inclSMThruGeorgiGlashow"[label="Spin10Model.inclSMThruGeorgiGlashow", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The inclusion of the Standard Model gauge group into Spin(10), i.e., the composition of
`inclGeorgiGlashow` and `GeorgiGlashow.inclSM`.
"]; }
subgraph cluster_Spin10Model { "Spin10Model.inclSM_eq_inclSMThruGeorgiGlashow"[label="Spin10Model.inclSM_eq_inclSMThruGeorgiGlashow", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The inclusion `inclSM` is equal to the inclusion `inclSMThruGeorgiGlashow`. "]; }
subgraph cluster_TwoHDM { "TwoHDM.prodMatrix_invariant"[label="TwoHDM.prodMatrix_invariant", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The map `prodMatrix` is invariant under the simultaneous action of `gaugeAction` on the two
Higgs fields. "]; }
subgraph cluster_TwoHDM { "TwoHDM.prodMatrix_to_higgsField"[label="TwoHDM.prodMatrix_to_higgsField", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="Given any smooth map `f` from spacetime to 2-by-2 complex matrices landing on positive
semi-definite matrices, there exist smooth Higgs fields `Φ1` and `Φ2` such that `f` is equal to
`prodMatrix Φ1 Φ2`.

See https://arxiv.org/pdf/hep-ph/0605184
"]; }
subgraph cluster_StandardModel { "StandardModel.gaugeGroupℤ₂SubGroup"[label="StandardModel.gaugeGroupℤ₂SubGroup", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The ℤ₂subgroup of the un-quotiented gauge group which acts trivially on all particles in the
standard model, i.e., the ℤ₂-subgroup of `GaugeGroupI` derived from the ℤ₂ subgroup of
`gaugeGroupℤ₆SubGroup`.

See https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_StandardModel { "StandardModel.GaugeGroupℤ₂"[label="StandardModel.GaugeGroupℤ₂", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The gauge group of the Standard Model with a ℤ₂ quotient, i.e., the quotient of `GaugeGroupI` by
the ℤ₂-subgroup `gaugeGroupℤ₂SubGroup`.

See https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_StandardModel { "StandardModel.gaugeGroupℤ₃SubGroup"[label="StandardModel.gaugeGroupℤ₃SubGroup", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The ℤ₃-subgroup of the un-quotiented gauge group which acts trivially on all particles in the
standard model, i.e., the ℤ₃-subgroup of `GaugeGroupI` derived from the ℤ₃ subgroup of
`gaugeGroupℤ₆SubGroup`.

See https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_StandardModel { "StandardModel.GaugeGroupℤ₃"[label="StandardModel.GaugeGroupℤ₃", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The gauge group of the Standard Model with a ℤ₃-quotient, i.e., the quotient of `GaugeGroupI` by
the ℤ₃-subgroup `gaugeGroupℤ₃SubGroup`.

See https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_StandardModel { "StandardModel.GaugeGroup"[label="StandardModel.GaugeGroup", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The (global) gauge group of the Standard Model given a choice of quotient, i.e., the map from
`GaugeGroupQuot` to `Type` which gives the gauge group of the Standard Model for a given choice of
quotient.

See https://math.ucr.edu/home/baez/guts.pdf
"]; }
subgraph cluster_StandardModel { "StandardModel.gaugeGroupI_lie"[label="StandardModel.gaugeGroupI_lie", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The gauge group `GaugeGroupI` is a Lie group. "]; }
subgraph cluster_StandardModel { "StandardModel.gaugeGroup_lie"[label="StandardModel.gaugeGroup_lie", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="For every `q` in `GaugeGroupQuot` the group `GaugeGroup q` is a Lie group. "]; }
subgraph cluster_StandardModel { "StandardModel.gaugeBundleI"[label="StandardModel.gaugeBundleI", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The trivial principal bundle over SpaceTime with structure group `GaugeGroupI`. "]; }
subgraph cluster_StandardModel { "StandardModel.gaugeTransformI"[label="StandardModel.gaugeTransformI", shape=box, style=filled, fillcolor=lightgray,
    tooltip="A global section of `gaugeBundleI`. "]; }
subgraph cluster_StandardModel_HiggsField { "StandardModel.HiggsField.zero_is_zero_section"[label="StandardModel.HiggsField.zero_is_zero_section", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The zero Higgs field is the zero section of the Higgs bundle, i.e., the HiggsField `zero`
defined by `ofReal 0` is the constant zero-section of the bundle `HiggsBundle`.
"]; }
subgraph cluster_StandardModel_HiggsVec { "StandardModel.HiggsVec.guage_orbit"[label="StandardModel.HiggsVec.guage_orbit", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="There exists a `g` in `GaugeGroupI` such that `rep g φ = φ'` iff `‖φ‖ = ‖φ'‖`. "]; }
subgraph cluster_StandardModel_HiggsVec { "StandardModel.HiggsVec.stability_group_single"[label="StandardModel.HiggsVec.stability_group_single", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The Higgs boson breaks electroweak symmetry down to the electromagnetic force, i.e., the
stability group of the action of `rep` on `![0, Complex.ofReal ‖φ‖]`, for non-zero `‖φ‖`, is the
`SU(3) × U(1)` subgroup of `gaugeGroup := SU(3) × SU(2) × U(1)` with the embedding given by
`(g, e^{i θ}) ↦ (g, diag (e ^ {3 * i θ}, e ^ {- 3 * i θ}), e^{i θ})`.
"]; }
subgraph cluster_StandardModel_HiggsVec { "StandardModel.HiggsVec.stability_group"[label="StandardModel.HiggsVec.stability_group", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The subgroup of `gaugeGroup := SU(3) × SU(2) × U(1)` which preserves every `HiggsVec` by the
action of `StandardModel.HiggsVec.rep` is given by `SU(3) × ℤ₆` where `ℤ₆` is the subgroup of
`SU(2) × U(1)` with elements `(α^(-3) * I₂, α)` where `α` is a sixth root of unity.
"]; }
subgraph cluster_StandardModel_HiggsField { "StandardModel.HiggsField.gaugeAction"[label="StandardModel.HiggsField.gaugeAction", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The action of `gaugeTransformI` on `HiggsField` acting pointwise through `HiggsVec.rep`. "]; }
subgraph cluster_StandardModel_HiggsField { "StandardModel.HiggsField.guage_orbit"[label="StandardModel.HiggsField.guage_orbit", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="There exists a `g` in `gaugeTransformI` such that `gaugeAction g φ = φ'` iff
`φ(x)^† φ(x) = φ'(x)^† φ'(x)`.
"]; }
subgraph cluster_StandardModel_HiggsField { "StandardModel.HiggsField.gauge_orbit_surject"[label="StandardModel.HiggsField.gauge_orbit_surject", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="For every smooth map `f` from `SpaceTime` to `ℝ` such that `f` is positive semidefinite, there
exists a Higgs field `φ` such that `f = φ^† φ`.
"]; }
subgraph cluster_StandardModel_HiggsField_Potential { "StandardModel.HiggsField.Potential.isBounded_iff_of_𝓵_zero"[label="StandardModel.HiggsField.Potential.isBounded_iff_of_𝓵_zero", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="When there is no quartic coupling, the potential is bounded iff the mass squared is
non-positive, i.e., for `P : Potential` then `P.IsBounded` iff `P.μ2 ≤ 0`. That is to say
`- P.μ2 * ‖φ‖_H^2 x` is bounded below iff `P.μ2 ≤ 0`. "]; }
subgraph cluster_complexLorentzTensor { "complexLorentzTensor.contrBispinorUp_eq_metric_contr_contrBispinorDown"[label="complexLorentzTensor.contrBispinorUp_eq_metric_contr_contrBispinorDown", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="`{contrBispinorUp p | α β = εL | α α' ⊗ εR | β β'⊗ contrBispinorDown p | α' β' }ᵀ`.

Proof: expand `contrBispinorDown` and use fact that metrics contract to the identity.
"]; }
subgraph cluster_complexLorentzTensor { "complexLorentzTensor.coBispinorUp_eq_metric_contr_coBispinorDown"[label="complexLorentzTensor.coBispinorUp_eq_metric_contr_coBispinorDown", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="`{coBispinorUp p | α β = εL | α α' ⊗ εR | β β'⊗ coBispinorDown p | α' β' }ᵀ`.

proof: expand `coBispinorDown` and use fact that metrics contract to the identity.
"]; }
subgraph cluster_Lorentz_SL2C { "Lorentz.SL2C.toRestrictedLorentzGroup"[label="Lorentz.SL2C.toRestrictedLorentzGroup", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The homomorphism from `SL(2, ℂ)` to the restricted Lorentz group. "]; }
subgraph cluster_SpaceTime { "SpaceTime.space_equivariant"[label="SpaceTime.space_equivariant", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The function `space` is equivariant with respect to rotations. "]; }
subgraph cluster_SpecialRelativity_InstantaneousTwinParadox { "SpecialRelativity.InstantaneousTwinParadox.ageGap_nonneg"[label="SpecialRelativity.InstantaneousTwinParadox.ageGap_nonneg", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="In the twin paradox with instantous acceleration, Twin A is always older
then Twin B. "]; }
subgraph cluster_IndexNotation_OverColor { "IndexNotation.OverColor.forgetLift"[label="IndexNotation.OverColor.forgetLift", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The natural isomorphism between `lift (C := C) ⋙ forget` and
`Functor.id (Discrete C ⥤ Rep k G)`.
"]; }
subgraph cluster_Fermion { "Fermion.rightHandedWeylAltEquiv"[label="Fermion.rightHandedWeylAltEquiv", shape=box, style=filled, fillcolor=lightgray,
    tooltip="The linear equivalence between `rightHandedWeyl` and `altRightHandedWeyl` given by multiplying
an element of `rightHandedWeyl` by the matrix `εᵃ⁰ᵃ¹ = !![0, 1; -1, 0]]`.
"]; }
subgraph cluster_Fermion { "Fermion.rightHandedWeylAltEquiv_equivariant"[label="Fermion.rightHandedWeylAltEquiv_equivariant", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The linear equivalence `rightHandedWeylAltEquiv` is equivariant with respect to the action of
`SL(2,C)` on `rightHandedWeyl` and `altRightHandedWeyl`.
"]; }
subgraph cluster_realLorentzTensor { "realLorentzTensor.toComplex_injective"[label="realLorentzTensor.toComplex_injective", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The map `toComplex` is injective. "]; }
subgraph cluster_realLorentzTensor { "realLorentzTensor.toComplex_equivariant"[label="realLorentzTensor.toComplex_equivariant", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The map `toComplex` is equivariant. "]; }
subgraph cluster_realLorentzTensor { "realLorentzTensor.permT_toComplex"[label="realLorentzTensor.permT_toComplex", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The map `toComplex` commutes with permT. "]; }
subgraph cluster_realLorentzTensor { "realLorentzTensor.prodT_toComplex"[label="realLorentzTensor.prodT_toComplex", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The map `toComplex` commutes with prodT. "]; }
subgraph cluster_realLorentzTensor { "realLorentzTensor.contrT_toComplex"[label="realLorentzTensor.contrT_toComplex", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The map `toComplex` commutes with contrT. "]; }
subgraph cluster_realLorentzTensor { "realLorentzTensor.evalT_toComplex"[label="realLorentzTensor.evalT_toComplex", shape=ellipse, style=filled, fillcolor=lightgray,
    tooltip="The map `toComplex` commutes with evalT. "]; }
"GeorgiGlashow.GaugeGroupI" -> "GeorgiGlashow.inclSM"
"StandardModel.GaugeGroupI" -> "GeorgiGlashow.inclSM"
"GeorgiGlashow.inclSM" -> "GeorgiGlashow.inclSM_ker"
"GeorgiGlashow.inclSM" -> "GeorgiGlashow.embedSMℤ₆"
"GeorgiGlashow.GaugeGroupI" -> "GeorgiGlashow.embedSMℤ₆"
"GeorgiGlashow.inclSM_ker" -> "GeorgiGlashow.embedSMℤ₆"
"PatiSalam.GaugeGroupI" -> "PatiSalam.inclSM"
"StandardModel.GaugeGroupI" -> "PatiSalam.inclSM"
"PatiSalam.inclSM" -> "PatiSalam.inclSM_ker"
"StandardModel.gaugeGroupℤ₃SubGroup" -> "PatiSalam.inclSM_ker"
"PatiSalam.inclSM" -> "PatiSalam.embedSMℤ₃"
"StandardModel.GaugeGroupℤ₃" -> "PatiSalam.embedSMℤ₃"
"PatiSalam.GaugeGroupI" -> "PatiSalam.embedSMℤ₃"
"PatiSalam.inclSM_ker" -> "PatiSalam.embedSMℤ₃"
"PatiSalam.GaugeGroupI" -> "PatiSalam.gaugeGroupISpinEquiv"
"PatiSalam.GaugeGroupI" -> "PatiSalam.gaugeGroupℤ₂SubGroup"
"PatiSalam.GaugeGroupI" -> "PatiSalam.GaugeGroupℤ₂"
"PatiSalam.gaugeGroupℤ₂SubGroup" -> "PatiSalam.GaugeGroupℤ₂"
"PatiSalam.inclSM" -> "PatiSalam.sm_ℤ₆_factor_through_gaugeGroupℤ₂SubGroup"
"PatiSalam.gaugeGroupℤ₂SubGroup" -> "PatiSalam.sm_ℤ₆_factor_through_gaugeGroupℤ₂SubGroup"
"PatiSalam.inclSM" -> "PatiSalam.embedSMℤ₆Toℤ₂"
"PatiSalam.GaugeGroupℤ₂" -> "PatiSalam.embedSMℤ₆Toℤ₂"
"PatiSalam.sm_ℤ₆_factor_through_gaugeGroupℤ₂SubGroup" -> "PatiSalam.embedSMℤ₆Toℤ₂"
"Spin10Model.GaugeGroupI" -> "Spin10Model.inclPatiSalam"
"PatiSalam.GaugeGroupI" -> "Spin10Model.inclPatiSalam"
"PatiSalam.gaugeGroupISpinEquiv" -> "Spin10Model.inclPatiSalam"
"Spin10Model.inclPatiSalam" -> "Spin10Model.inclSM"
"PatiSalam.inclSM" -> "Spin10Model.inclSM"
"Spin10Model.GaugeGroupI" -> "Spin10Model.inclGeorgiGlashow"
"GeorgiGlashow.GaugeGroupI" -> "Spin10Model.inclGeorgiGlashow"
"Spin10Model.inclGeorgiGlashow" -> "Spin10Model.inclSMThruGeorgiGlashow"
"GeorgiGlashow.inclSM" -> "Spin10Model.inclSMThruGeorgiGlashow"
"Spin10Model.inclSM" -> "Spin10Model.inclSM_eq_inclSMThruGeorgiGlashow"
"Spin10Model.inclSMThruGeorgiGlashow" -> "Spin10Model.inclSM_eq_inclSMThruGeorgiGlashow"
"TwoHDM.prodMatrix" -> "TwoHDM.prodMatrix_invariant"
"StandardModel.HiggsField.gaugeAction" -> "TwoHDM.prodMatrix_invariant"
"TwoHDM.prodMatrix" -> "TwoHDM.prodMatrix_to_higgsField"
"StandardModel.HiggsField" -> "TwoHDM.prodMatrix_to_higgsField"
"TwoHDM.prodMatrix_smooth" -> "TwoHDM.prodMatrix_to_higgsField"
"StandardModel.GaugeGroupI" -> "StandardModel.gaugeGroupℤ₂SubGroup"
"StandardModel.GaugeGroupI" -> "StandardModel.GaugeGroupℤ₂"
"StandardModel.gaugeGroupℤ₂SubGroup" -> "StandardModel.GaugeGroupℤ₂"
"StandardModel.GaugeGroupI" -> "StandardModel.gaugeGroupℤ₃SubGroup"
"StandardModel.GaugeGroupI" -> "StandardModel.GaugeGroupℤ₃"
"StandardModel.gaugeGroupℤ₃SubGroup" -> "StandardModel.GaugeGroupℤ₃"
"StandardModel.GaugeGroupI" -> "StandardModel.GaugeGroup"
"StandardModel.gaugeGroupℤ₂SubGroup" -> "StandardModel.GaugeGroup"
"StandardModel.gaugeGroupℤ₃SubGroup" -> "StandardModel.GaugeGroup"
"StandardModel.GaugeGroupQuot" -> "StandardModel.GaugeGroup"
"StandardModel.GaugeGroupI" -> "StandardModel.gaugeGroupI_lie"
"StandardModel.GaugeGroup" -> "StandardModel.gaugeGroup_lie"
"StandardModel.GaugeGroupI" -> "StandardModel.gaugeBundleI"
"SpaceTime" -> "StandardModel.gaugeBundleI"
"StandardModel.gaugeBundleI" -> "StandardModel.gaugeTransformI"
"StandardModel.HiggsField.zero" -> "StandardModel.HiggsField.zero_is_zero_section"
"StandardModel.HiggsVec.rotate_fst_zero_snd_real" -> "StandardModel.HiggsVec.guage_orbit"
"StandardModel.HiggsVec" -> "StandardModel.HiggsVec.stability_group_single"
"StandardModel.HiggsVec.rep" -> "StandardModel.HiggsVec.stability_group_single"
"StandardModel.HiggsVec" -> "StandardModel.HiggsVec.stability_group"
"StandardModel.HiggsVec.rep" -> "StandardModel.HiggsVec.stability_group"
"StandardModel.HiggsVec.rep" -> "StandardModel.HiggsField.gaugeAction"
"StandardModel.gaugeTransformI" -> "StandardModel.HiggsField.gaugeAction"
"StandardModel.HiggsField.gaugeAction" -> "StandardModel.HiggsField.guage_orbit"
"StandardModel.HiggsField" -> "StandardModel.HiggsField.gauge_orbit_surject"
"SpaceTime" -> "StandardModel.HiggsField.gauge_orbit_surject"
"StandardModel.HiggsField.Potential.IsBounded" -> "StandardModel.HiggsField.Potential.isBounded_iff_of_𝓵_zero"
"StandardModel.HiggsField.Potential" -> "StandardModel.HiggsField.Potential.isBounded_iff_of_𝓵_zero"
"complexLorentzTensor.contrBispinorUp" -> "complexLorentzTensor.contrBispinorUp_eq_metric_contr_contrBispinorDown"
"complexLorentzTensor.contrBispinorDown" -> "complexLorentzTensor.contrBispinorUp_eq_metric_contr_contrBispinorDown"
"complexLorentzTensor.leftMetric" -> "complexLorentzTensor.contrBispinorUp_eq_metric_contr_contrBispinorDown"
"complexLorentzTensor.rightMetric" -> "complexLorentzTensor.contrBispinorUp_eq_metric_contr_contrBispinorDown"
"complexLorentzTensor.coBispinorUp" -> "complexLorentzTensor.coBispinorUp_eq_metric_contr_coBispinorDown"
"complexLorentzTensor.coBispinorDown" -> "complexLorentzTensor.coBispinorUp_eq_metric_contr_coBispinorDown"
"complexLorentzTensor.leftMetric" -> "complexLorentzTensor.coBispinorUp_eq_metric_contr_coBispinorDown"
"complexLorentzTensor.rightMetric" -> "complexLorentzTensor.coBispinorUp_eq_metric_contr_coBispinorDown"
"Lorentz.SL2C.toLorentzGroup" -> "Lorentz.SL2C.toRestrictedLorentzGroup"
"Lorentz.SL2C.toLorentzGroup_det_one" -> "Lorentz.SL2C.toRestrictedLorentzGroup"
"Lorentz.SL2C.toLorentzGroup_isOrthochronous" -> "Lorentz.SL2C.toRestrictedLorentzGroup"
"LorentzGroup.restricted" -> "Lorentz.SL2C.toRestrictedLorentzGroup"
"SpaceTime.space" -> "SpaceTime.space_equivariant"
"SpecialRelativity.InstantaneousTwinParadox.ageGap" -> "SpecialRelativity.InstantaneousTwinParadox.ageGap_nonneg"
"IndexNotation.OverColor.forget" -> "IndexNotation.OverColor.forgetLift"
"IndexNotation.OverColor.lift" -> "IndexNotation.OverColor.forgetLift"
"Fermion.rightHanded" -> "Fermion.rightHandedWeylAltEquiv"
"Fermion.altRightHanded" -> "Fermion.rightHandedWeylAltEquiv"
"Fermion.rightHandedWeylAltEquiv" -> "Fermion.rightHandedWeylAltEquiv_equivariant"
"TensorSpecies.Tensor.permT" -> "realLorentzTensor.permT_toComplex"
"TensorSpecies.Tensor.prodT" -> "realLorentzTensor.prodT_toComplex"
"TensorSpecies.Tensor.contrT" -> "realLorentzTensor.contrT_toComplex"
"TensorSpecies.Tensor.evalT" -> "realLorentzTensor.evalT_toComplex"
}
